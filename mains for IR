import ir_rx
import machine
import math, time
from machine import PWM
from machine import Pin
#from machine import Pin

from ir_rx.nec import NEC_8 # Use the NEC 8-bit class
from ir_rx.print_error import print_error # for debugging
# Callback function to execute when an IR code is received
pwm_rate = 2000

led = Pin(9, Pin.OUT)
led2 = Pin(8, Pin.OUT)
led3 = Pin(7, Pin.OUT)
pwm = min(max(int(2**16 * abs(1)), 0), 65535)
def ir_callback(data, addr, _):
    print(f"Received NEC command! Data: 0x{data:02X}, Addr: 0x{addr:02X}")
    
# Setup the IR receiver
ir_pin = Pin(17, Pin.IN, Pin.PULL_UP)

ir_receiver = NEC_8(ir_pin, callback=ir_callback)
# Optional: Use the print_error function for debugging
ir_receiver.error_function(print_error)
# Main loop to keep the script running
while True:
    pass # Execution is interrupt-driven, so just keep the script alive
---------------------------------------------------------------------------------
import ir_tx
import time
import machine
from ir_tx.nec import NEC
from machine import Pin

tx_pin = Pin(17,Pin.OUT,value=0)
device_addr = 0x01
transmitter = NEC(tx_pin)

commands = [0x01,0x02,0x03,0x04]

if __name__ == "__main__":
   while True:
       for command in commands:
               transmitter.transmit(device_addr,command)
               print("COMMANDS",hex(command),"TRANSMITTED.")
               time.sleep(3)
